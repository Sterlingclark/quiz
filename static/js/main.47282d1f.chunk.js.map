{"version":3,"sources":["App.js","index.js"],"names":["App","categories","setCategories","useState","selectedCategory","setSelectedCategory","questionType","setQuestionType","difficulty","setDifficulty","questions","setQuestions","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","userAnswers","setUserAnswers","loading","setLoading","decodeHTMLEntities","text","textArea","document","createElement","innerHTML","value","useEffect","fetch","then","response","json","data","trivia_categories","React","className","role","length","map","answer","index","key","question","correct","Fragment","onChange","e","target","category","id","name","onClick","fetchQuestions","concat","results","disabled","incorrect_answers","correct_answer","sort","Math","random","answerOption","handleAnswerOptionClick","isCorrect","nextQuestion","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.47282d1f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [questionType, setQuestionType] = useState('');\n  const [difficulty, setDifficulty] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetch('https://opentdb.com/api_category.php')\n      .then(response => response.json())\n      .then(data => setCategories(data.trivia_categories));\n  }, []);\n\n  const fetchQuestions = () => {\n    setLoading(true);\n    fetch(`https://opentdb.com/api.php?amount=5&category=${selectedCategory}&type=${questionType}&difficulty=${difficulty}`)\n      .then(response => response.json())\n      .then(data => {\n        setQuestions(data.results);\n        setLoading(false);\n      });\n  };\n\n  const handleCategoryChange = (e) => {\n    setSelectedCategory(e.target.value);\n  };\n\n  const handleTypeChange = (e) => {\n    setQuestionType(e.target.value);\n  };\n\n  const handleDifficultyChange = (e) => {\n    setDifficulty(e.target.value);\n  };\n\n  const handleAnswerOptionClick = (answer, isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    setUserAnswers([\n      ...userAnswers,\n      { question: questions[currentQuestion].question, answer, correct: questions[currentQuestion].correct_answer }\n    ]);\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  function decodeHTMLEntities(text) {\n    var textArea = document.createElement('textarea');\n    textArea.innerHTML = text;\n    return textArea.value;\n  }\n\n  return (\n    <div className=\"App container\">\n      <header className=\"my-4\">\n        <h1>Quiz App</h1>\n      </header>\n\n      {loading ? (\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      ) : showScore ? (\n        <div className=\"score-section\">\n          <h2>You scored {score} out of {questions.length}</h2>\n          <h3>Review Your Answers:</h3>\n          <ul className=\"list-group\">\n            {userAnswers.map((answer, index) => (\n              <li key={index} className=\"list-group-item\">\n                <p><strong>Question:</strong> {decodeHTMLEntities(answer.question)}</p>\n                <p><strong>Your Answer:</strong> {decodeHTMLEntities(answer.answer)}</p>\n                <p><strong>Correct Answer:</strong> {decodeHTMLEntities(answer.correct)}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <>\n          {questions.length === 0 ? (\n            <div className=\"mb-4\">\n              <div className=\"form-group\">\n                <label>Select Category: </label>\n                <select value={selectedCategory} onChange={handleCategoryChange} className=\"form-control\">\n                  <option value=\"\">Select</option>\n                  {categories.map((category) => (\n                    <option key={category.id} value={category.id}>\n                      {category.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Select Type: </label>\n                <select value={questionType} onChange={handleTypeChange} className=\"form-control\">\n                  <option value=\"\">Select</option>\n                  <option value=\"multiple\">Multiple Choice</option>\n                  <option value=\"boolean\">True / False</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Select Difficulty: </label>\n                <select value={difficulty} onChange={handleDifficultyChange} className=\"form-control\">\n                  <option value=\"\">Select</option>\n                  <option value=\"easy\">Easy</option>\n                  <option value=\"medium\">Medium</option>\n                  <option value=\"hard\">Hard</option>\n                </select>\n              </div>\n              <button onClick={fetchQuestions} disabled={!selectedCategory || !questionType || !difficulty} className=\"btn btn-primary\">\n                Start Quiz\n              </button>\n            </div>\n          ) : (\n            <div className=\"card my-4\">\n              <div className=\"card-body\">\n                <div className=\"question-section\">\n                  <div className=\"question-count\">\n                    <span>Question {currentQuestion + 1}</span>/{questions.length}\n                  </div>\n                  <div className=\"question-text\">\n                    {decodeHTMLEntities(questions[currentQuestion].question)}\n                  </div>\n                </div>\n                <div className=\"answer-section\">\n                  {questions[currentQuestion].incorrect_answers.concat(questions[currentQuestion].correct_answer)\n                    .sort(() => Math.random() - 0.5)\n                    .map((answerOption, index) => (\n                      <button\n                        key={index}\n                        onClick={() => handleAnswerOptionClick(answerOption, answerOption === questions[currentQuestion].correct_answer)}\n                        className=\"btn btn-outline-primary btn-block my-2\"\n                      >\n                        {decodeHTMLEntities(answerOption)}\n                      </button>\n                    ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n\n      <footer className=\"mt-4\">\n        <p>&copy; 2024 Quiz App. All rights reserved.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}